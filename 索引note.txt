1.索引在创建表的时候可以同时创建，也可以随时添加新的索引。
	为city表创建10个字节的前缀索引：create index cityname on city (city(10))
	删除索引：drop index cityname on city
2.设计索引的原则：
	1.搜索的索引列，不一定是所要选择的列，最适合索引的列是出现在where子句中的列
	2.使用唯一索引，考虑某列中值的分布，索引的列的基数越大，索引的效果越好
	3.使用短索引，如果对字符串进行索引，应该指定一个前缀长度，例如有一个char(200)的字符串，如果在它的前10位多数值是惟一的，那么不必对整列进行索引
	4.利用最左前缀。在创建一个n列的索引时，实际上创建了mysql可利用的n个索引。
	5.不要过度索引。
3.hash索引：
	1.只用于使用=或<=>操作符的等式比较
	2.优化器不能使用hash索引来加速order by操作
	3.只能使用整个关键字来搜索一行
	
	btree和hash都可以使用：select * from t1 where key_col=1 or key_col in (15,18,20)
	btree索引适用：select * from t1 where key_col >1 and key_col < 10
4.查询表中的索引：show index from table_name
5.唯一索引不允许具有索引值相同的行
6.索引类型：
	1.聚集索引：主键索引
	2.非聚集索引：常规索引，获取查询条件对应的叶节点-获取主键-获取数据行-获取数据行中查询的数据段
	3.覆盖索引：多字段索引，当查询的数据段在索引中时，获取查询条件对应的叶节点-获取查询的数据段
	4.主键是查询数据行的唯一方法
7.主索引:可确保字段中输入值的唯一性并决定了处理记录的顺序。可以为数据库中的每一个表建立一个主索引。如果某个表已经有了一个主索引，可以继续添加候选索引.
候选索引:像主索引一样要求字段值的唯一性并决定了处理记录的顺序。在数据库表和自由表中均可为每个表建立多个候选索引.
普通索引:也可以决定记录的处理顺序，但是允许字段中出现重复值。在一个表中可以加入多个普通索引.
